AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    usage_data_collector_app
    
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
    Function:
        Timeout: 300

Parameters:
  DBName:
    Default: usagedata
    Description: The database name
    Type: String
    MinLength: '1'
    MaxLength: '10'
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
  DBUsername:
    Default: root
    NoEcho: 'true'
    Description: The database admin account username
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
  DBPassword:
    Default: root1234
    NoEcho: 'true'
    Description: The database admin account password
    Type: String
    MinLength: '8'

Resources:
    HelloWorldFunction:
        Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
        Properties:
            CodeUri: src/
            Handler: app.lambda_handler
            Runtime: nodejs8.10
            Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
                Variables:
                    PARAM1: VALUE
            Events:
                HelloWorld:
                    Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
                    Properties:
                        Path: /hello
                        Method: get

    UsageDataPostgresDB:
      Type : AWS::RDS::DBInstance
      Properties:
        Engine: postgres
        DBName:
          Ref: DBName
        MasterUsername:
          Ref: DBUsername
        MasterUserPassword:
          Ref: DBPassword
        DBInstanceClass: db.t2.micro
        AllocatedStorage: '5'

Outputs:

    HelloWorldApi:
      Description: "API Gateway endpoint URL for Prod stage for Hello World function"
      Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"

    HelloWorldFunction:
      Description: "Hello World Lambda Function ARN"
      Value: !GetAtt HelloWorldFunction.Arn

    HelloWorldFunctionIamRole:
      Description: "Implicit IAM Role created for Hello World function"
      Value: !GetAtt HelloWorldFunctionRole.Arn

    UsageDataPostgresDBConnectionString:
      Description: "db connection string"
      Value:  
        Fn::Join:
        - ''
        - - postgresql://
          - Ref: DBUsername
          - ":"
          - Ref: DBPassword
          - "@"
          - Fn::GetAtt:
            - UsageDataPostgresDB
            - Endpoint.Address
          - ":"
          - Fn::GetAtt:
            - UsageDataPostgresDB
            - Endpoint.Port
          - "/"
          - Ref: DBName